#include <java/sql/DatabaseMetaData.h>

#include <java/sql/Connection.h>
#include <java/sql/ResultSet.h>
#include <java/sql/RowIdLifetime.h>
#include <jcpp.h>

using $ClassInfo = ::java::lang::ClassInfo;
using $FieldInfo = ::java::lang::FieldInfo;
using $MethodInfo = ::java::lang::MethodInfo;
using $Connection = ::java::sql::Connection;
using $ResultSet = ::java::sql::ResultSet;
using $RowIdLifetime = ::java::sql::RowIdLifetime;
using $Wrapper = ::java::sql::Wrapper;

namespace java {
	namespace sql {

$FieldInfo _DatabaseMetaData_FieldInfo_[] = {
	{"procedureResultUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureResultUnknown)},
	{"procedureNoResult", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureNoResult)},
	{"procedureReturnsResult", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureReturnsResult)},
	{"procedureColumnUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureColumnUnknown)},
	{"procedureColumnIn", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureColumnIn)},
	{"procedureColumnInOut", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureColumnInOut)},
	{"procedureColumnOut", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureColumnOut)},
	{"procedureColumnReturn", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureColumnReturn)},
	{"procedureColumnResult", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureColumnResult)},
	{"procedureNoNulls", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureNoNulls)},
	{"procedureNullable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureNullable)},
	{"procedureNullableUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, procedureNullableUnknown)},
	{"columnNoNulls", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, columnNoNulls)},
	{"columnNullable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, columnNullable)},
	{"columnNullableUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, columnNullableUnknown)},
	{"bestRowTemporary", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, bestRowTemporary)},
	{"bestRowTransaction", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, bestRowTransaction)},
	{"bestRowSession", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, bestRowSession)},
	{"bestRowUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, bestRowUnknown)},
	{"bestRowNotPseudo", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, bestRowNotPseudo)},
	{"bestRowPseudo", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, bestRowPseudo)},
	{"versionColumnUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, versionColumnUnknown)},
	{"versionColumnNotPseudo", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, versionColumnNotPseudo)},
	{"versionColumnPseudo", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, versionColumnPseudo)},
	{"importedKeyCascade", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeyCascade)},
	{"importedKeyRestrict", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeyRestrict)},
	{"importedKeySetNull", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeySetNull)},
	{"importedKeyNoAction", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeyNoAction)},
	{"importedKeySetDefault", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeySetDefault)},
	{"importedKeyInitiallyDeferred", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeyInitiallyDeferred)},
	{"importedKeyInitiallyImmediate", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeyInitiallyImmediate)},
	{"importedKeyNotDeferrable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, importedKeyNotDeferrable)},
	{"typeNoNulls", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, typeNoNulls)},
	{"typeNullable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, typeNullable)},
	{"typeNullableUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, typeNullableUnknown)},
	{"typePredNone", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, typePredNone)},
	{"typePredChar", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, typePredChar)},
	{"typePredBasic", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, typePredBasic)},
	{"typeSearchable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, typeSearchable)},
	{"tableIndexStatistic", "S", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, tableIndexStatistic)},
	{"tableIndexClustered", "S", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, tableIndexClustered)},
	{"tableIndexHashed", "S", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, tableIndexHashed)},
	{"tableIndexOther", "S", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, tableIndexOther)},
	{"attributeNoNulls", "S", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, attributeNoNulls)},
	{"attributeNullable", "S", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, attributeNullable)},
	{"attributeNullableUnknown", "S", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, attributeNullableUnknown)},
	{"sqlStateXOpen", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, sqlStateXOpen)},
	{"sqlStateSQL", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, sqlStateSQL)},
	{"sqlStateSQL99", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, sqlStateSQL99)},
	{"functionColumnUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionColumnUnknown)},
	{"functionColumnIn", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionColumnIn)},
	{"functionColumnInOut", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionColumnInOut)},
	{"functionColumnOut", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionColumnOut)},
	{"functionReturn", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionReturn)},
	{"functionColumnResult", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionColumnResult)},
	{"functionNoNulls", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionNoNulls)},
	{"functionNullable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionNullable)},
	{"functionNullableUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionNullableUnknown)},
	{"functionResultUnknown", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionResultUnknown)},
	{"functionNoTable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionNoTable)},
	{"functionReturnsTable", "I", nullptr, $PUBLIC | $STATIC | $FINAL, $constField(DatabaseMetaData, functionReturnsTable)},
	{}
};

$MethodInfo _DatabaseMetaData_MethodInfo_[] = {
	{"allProceduresAreCallable", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"allTablesAreSelectable", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"autoCommitFailureClosesAllResultSets", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"dataDefinitionCausesTransactionCommit", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"dataDefinitionIgnoredInTransactions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"deletesAreDetected", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"doesMaxRowSizeIncludeBlobs", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"generatedKeyAlwaysReturned", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getAttributes", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getBestRowIdentifier", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getCatalogSeparator", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getCatalogTerm", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getCatalogs", "()Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getClientInfoProperties", "()Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getColumnPrivileges", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getColumns", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getConnection", "()Ljava/sql/Connection;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getCrossReference", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getDatabaseMajorVersion", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getDatabaseMinorVersion", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getDatabaseProductName", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getDatabaseProductVersion", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getDefaultTransactionIsolation", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getDriverMajorVersion", "()I", nullptr, $PUBLIC | $ABSTRACT},
	{"getDriverMinorVersion", "()I", nullptr, $PUBLIC | $ABSTRACT},
	{"getDriverName", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getDriverVersion", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getExportedKeys", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getExtraNameCharacters", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getFunctionColumns", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getFunctions", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getIdentifierQuoteString", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getImportedKeys", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getIndexInfo", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getJDBCMajorVersion", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getJDBCMinorVersion", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxBinaryLiteralLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxCatalogNameLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxCharLiteralLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxColumnNameLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxColumnsInGroupBy", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxColumnsInIndex", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxColumnsInOrderBy", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxColumnsInSelect", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxColumnsInTable", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxConnections", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxCursorNameLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxIndexLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxLogicalLobSize", "()J", nullptr, $PUBLIC, nullptr, "java.sql.SQLException"},
	{"getMaxProcedureNameLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxRowSize", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxSchemaNameLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxStatementLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxStatements", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxTableNameLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxTablesInSelect", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getMaxUserNameLength", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getNumericFunctions", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getPrimaryKeys", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getProcedureColumns", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getProcedureTerm", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getProcedures", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getPseudoColumns", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getResultSetHoldability", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getRowIdLifetime", "()Ljava/sql/RowIdLifetime;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSQLKeywords", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSQLStateType", "()I", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSchemaTerm", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSchemas", "()Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSchemas", "(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSearchStringEscape", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getStringFunctions", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSuperTables", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSuperTypes", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getSystemFunctions", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getTablePrivileges", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getTableTypes", "()Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getTables", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getTimeDateFunctions", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getTypeInfo", "()Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getUDTs", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getURL", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getUserName", "()Ljava/lang/String;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"getVersionColumns", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"insertsAreDetected", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"isCatalogAtStart", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"isReadOnly", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"locatorsUpdateCopy", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"nullPlusNonNullIsNull", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"nullsAreSortedAtEnd", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"nullsAreSortedAtStart", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"nullsAreSortedHigh", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"nullsAreSortedLow", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"othersDeletesAreVisible", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"othersInsertsAreVisible", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"othersUpdatesAreVisible", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"ownDeletesAreVisible", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"ownInsertsAreVisible", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"ownUpdatesAreVisible", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"storesLowerCaseIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"storesLowerCaseQuotedIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"storesMixedCaseIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"storesMixedCaseQuotedIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"storesUpperCaseIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"storesUpperCaseQuotedIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsANSI92EntryLevelSQL", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsANSI92FullSQL", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsANSI92IntermediateSQL", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsAlterTableWithAddColumn", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsAlterTableWithDropColumn", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsBatchUpdates", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsCatalogsInDataManipulation", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsCatalogsInIndexDefinitions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsCatalogsInPrivilegeDefinitions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsCatalogsInProcedureCalls", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsCatalogsInTableDefinitions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsColumnAliasing", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsConvert", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsConvert", "(II)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsCoreSQLGrammar", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsCorrelatedSubqueries", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsDataDefinitionAndDataManipulationTransactions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsDataManipulationTransactionsOnly", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsDifferentTableCorrelationNames", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsExpressionsInOrderBy", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsExtendedSQLGrammar", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsFullOuterJoins", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsGetGeneratedKeys", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsGroupBy", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsGroupByBeyondSelect", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsGroupByUnrelated", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsIntegrityEnhancementFacility", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsLikeEscapeClause", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsLimitedOuterJoins", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsMinimumSQLGrammar", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsMixedCaseIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsMixedCaseQuotedIdentifiers", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsMultipleOpenResults", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsMultipleResultSets", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsMultipleTransactions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsNamedParameters", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsNonNullableColumns", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsOpenCursorsAcrossCommit", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsOpenCursorsAcrossRollback", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsOpenStatementsAcrossCommit", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsOpenStatementsAcrossRollback", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsOrderByUnrelated", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsOuterJoins", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsPositionedDelete", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsPositionedUpdate", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsRefCursors", "()Z", nullptr, $PUBLIC, nullptr, "java.sql.SQLException"},
	{"supportsResultSetConcurrency", "(II)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsResultSetHoldability", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsResultSetType", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSavepoints", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSchemasInDataManipulation", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSchemasInIndexDefinitions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSchemasInPrivilegeDefinitions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSchemasInProcedureCalls", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSchemasInTableDefinitions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSelectForUpdate", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSharding", "()Z", nullptr, $PUBLIC, nullptr, "java.sql.SQLException"},
	{"supportsStatementPooling", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsStoredFunctionsUsingCallSyntax", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsStoredProcedures", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSubqueriesInComparisons", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSubqueriesInExists", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSubqueriesInIns", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsSubqueriesInQuantifieds", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsTableCorrelationNames", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsTransactionIsolationLevel", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsTransactions", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsUnion", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"supportsUnionAll", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"updatesAreDetected", "(I)Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"usesLocalFilePerTable", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{"usesLocalFiles", "()Z", nullptr, $PUBLIC | $ABSTRACT, nullptr, "java.sql.SQLException"},
	{}
};

$ClassInfo _DatabaseMetaData_ClassInfo_ = {
	$PUBLIC | $INTERFACE | $ABSTRACT,
	"java.sql.DatabaseMetaData",
	nullptr,
	"java.sql.Wrapper",
	_DatabaseMetaData_FieldInfo_,
	_DatabaseMetaData_MethodInfo_
};

$Object* allocate$DatabaseMetaData($Class* clazz) {
	return $of($alloc(DatabaseMetaData));
}

int64_t DatabaseMetaData::getMaxLogicalLobSize() {
	return 0;
}

bool DatabaseMetaData::supportsRefCursors() {
	return false;
}

bool DatabaseMetaData::supportsSharding() {
	return false;
}

$Class* DatabaseMetaData::load$($String* name, bool initialize) {
	$loadClass(DatabaseMetaData, name, initialize, &_DatabaseMetaData_ClassInfo_, allocate$DatabaseMetaData);
	return class$;
}

$Class* DatabaseMetaData::class$ = nullptr;

	} // sql
} // java